{"version":3,"sources":["Tips.js","Components/TodoList/store/reducer.js","Components/TodoList/store/actionCreators.js","Components/TodoList/store/actionTypes.js","store/reducer.js","store/index.js","Components/TodoList/TodoListUI.js","Components/TodoList/TodoList.js","pages/home/index.js","pages/detail/loadable.js","App.js","index.js"],"names":["success","msg","message","defaultState","fromJS","inputValue","list","getInputChangeAction","value","type","getAddItemAction","getDeleteItemAction","index","getTodoList","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","wrap","_context","prev","next","Axios","get","sent","data","result","Error","t0","console","log","stop","this","_x","apply","arguments","reducer","combineReducers","todoList","state","length","undefined","action","newState","JSON","parse","stringify","push","Tips","splice","toConsumableArray","merge","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","TodoListUI","props","changeInputValue","handleClick","handleDelete","react_default","createElement","input","placeholder","style","width","marginRight","onChange","onKeyDown","e","keyCode","es_button","onClick","es_list","margin","bordered","locale","emptyText","dataSource","renderItem","item","Item","actions","size","confirm","Modal","title","content","okText","okType","cancelText","onOk","onCancel","delItem","TodoList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getTodoLists","_this$props","react","TodoList_TodoListUI","PureComponent","connect","getIn","actionCreators","target","Home","className","Components_TodoList_TodoList","Link","to","Component","LoadableComponent","Loadable","loader","__webpack_require__","then","bind","loading","loadable","App","es","BrowserRouter","Route","path","exact","component","Detail","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7999b320.chunk.js","sourcesContent":["import { message } from 'antd';\r\n\r\nconst success = (msg) => {\r\n  message.success(msg);\r\n}\r\n\r\nexport { success };\r\n","/*\r\n * @Author: sky\r\n * @email: 13011316073@163.com\r\n * @Description: 操作 todo-list\r\n * @Date: 2019-02-19 23:01:36\r\n */\r\nimport { fromJS } from 'immutable';\r\nimport { CHANGE_INPUT_VALUE, ADD_TODO_ITEM, DELETE_TODO_ITEM, INIT_LIST_ACTION } from './actionTypes';\r\n\r\nimport * as Tips from '../../../Tips';\r\n\r\n// 定义一个 immutable 类型的数据, fromJS 会把对象里边的对象也变成 immutable 类型的数据。\r\nconst defaultState = fromJS({\r\n  inputValue: '',\r\n  list: []\r\n});\r\n\r\n// const defaultState = {\r\n//   inputValue: '',\r\n//   list: []\r\n// }\r\n\r\n\r\n// reducer 可以接受 state, 但是绝不能修改 state\r\n// 它是一个纯函数，不能有时间的操作，不能有异步的操作。\r\n// 纯函数：给定固定的输入，就一定会有固定的输出，而且不会有任何副作用。\r\nexport default (state = defaultState, action) => {\r\n\r\n  const newState = JSON.parse(JSON.stringify(state));\r\n\r\n  switch (action.type) {\r\n\r\n    case CHANGE_INPUT_VALUE:\r\n      newState.inputValue = action.value;\r\n      break;\r\n\r\n    case ADD_TODO_ITEM:\r\n      newState.list.push(newState.inputValue);\r\n      newState.inputValue = '';\r\n      Tips.success('数据添加成功!');\r\n      break;\r\n\r\n    case DELETE_TODO_ITEM:\r\n      newState.list.splice(action.index, 1);\r\n      Tips.success('数据删除成功!');\r\n      break;\r\n\r\n    case INIT_LIST_ACTION:\r\n      newState.list = [...action.data];\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  // immutable 对象的 set 方法，会结合之前 immutable 对象的值和设置的值，返回一个全新的对象\r\n  return state.merge({\r\n    inputValue: newState.inputValue,\r\n    list: fromJS(newState.list)\r\n  });\r\n\r\n  // return state.set('inputValue', newState.inputValue)\r\n  //   .set('list', fromJS(newState.list));\r\n\r\n  // 返回新的 state\r\n  // return newState;\r\n}\r\n","/*\r\n * @Author: sky\r\n * @Date: 2019-02-19 14:47:58\r\n * @email: 13011316073@163.com\r\n * @Description: 封装 action 的创建\r\n */\r\nimport { CHANGE_INPUT_VALUE, ADD_TODO_ITEM, DELETE_TODO_ITEM, INIT_LIST_ACTION } from './actionTypes';\r\nimport Axios from 'axios';\r\n\r\n\r\n// 初始化数据\r\nconst initListAction = (data) => ({\r\n  type: INIT_LIST_ACTION,\r\n  data\r\n})\r\n\r\n\r\n// 监听 input 输入\r\nexport const getInputChangeAction = (value) => ({\r\n  type: CHANGE_INPUT_VALUE,\r\n  value\r\n});\r\n\r\n// 添加一个数据\r\nexport const getAddItemAction = () => ({\r\n  type: ADD_TODO_ITEM\r\n});\r\n\r\n// 删除某一个数据\r\nexport const getDeleteItemAction = (index) => ({\r\n  type: DELETE_TODO_ITEM,\r\n  index: index\r\n})\r\n\r\n// 异步获取 初始化数据\r\nexport const getTodoList = () => async dispatch => {\r\n\r\n  try {\r\n    let res = await Axios.get('http://localhost:3000/api/todo-list.json');\r\n    if (res.data.msg === 'success') {\r\n      const action = initListAction(res.data.result.list);\r\n      dispatch(action);\r\n    } else {\r\n      throw new Error('接口请求失败');\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  // Axios.get('http://localhost:3000/api/todolist')\r\n  // \t.then(res => {\r\n  // \t\tconst action = initListAction(res.data);\r\n  // \t\tdispatch(action);\r\n  // \t})\r\n  // \t.catch(err => console.log(err));\r\n}\r\n","/*\r\n * @Author: sky\r\n * @email: 13011316073@163.com\r\n * @Description: 统一操作类型\r\n * @Date: 2019-02-19 23:00:37\r\n */\r\nexport const CHANGE_INPUT_VALUE = 'change_input_value';\r\nexport const ADD_TODO_ITEM = 'add_todo_item';\r\nexport const DELETE_TODO_ITEM = 'delete_todo_item';\r\nexport const INIT_LIST_ACTION = 'init_list_action';\r\n","/*\r\n * @Author: sky\r\n * @email: 13011316073@163.com\r\n * @Description: file content\r\n * @Date: 2019-02-19 17:54:50\r\n */\r\nimport { combineReducers } from 'redux-immutable';\r\nimport { reducer as todoListReducer } from '../Components/TodoList/store';\r\n\r\n\r\n// 管理所有的 reducer 生成的是一个 immutable 类型的数据\r\nconst reducer = combineReducers({\r\n  todoList: todoListReducer\r\n})\r\n\r\n\r\nexport default reducer;\r\n","/*\r\n * @Author: sky\r\n * @email: 13011316073@163.com\r\n * @Description: store\r\n * @Date: 2019-02-19 17:48:54\r\n */\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst composeEnhancers =\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\r\n\r\nconst store = createStore(reducer, enhancer);\r\n\r\n\r\nexport default store;\r\n","/*\r\n * @Author: sky\r\n * @email: 13011316073@163.com\r\n * @Description: file content\r\n * @Date: 2019-02-19 18:38:13\r\n */\r\nimport React from 'react';\r\nimport { Input, Button, List, Modal } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nconst TodoListUI = (props) => {\r\n\r\n  const { inputValue, list, changeInputValue, handleClick, handleDelete } = props;\r\n\r\n  function delItem(index) {\r\n    if (list.size === 1) {\r\n\r\n      const confirm = Modal.confirm;\r\n      confirm({\r\n        title: '你确定删除最后一项吗?',\r\n        content: '点击确定按钮会删除最后一项，请注意：该删除无法恢复！',\r\n        okText: '确定',\r\n        okType: 'danger',\r\n        cancelText: '取消',\r\n        onOk() {\r\n          handleDelete(index);\r\n        },\r\n        onCancel() {\r\n          console.log('删除取消');\r\n        }\r\n      });\r\n    } else {\r\n      handleDelete(index);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        placeholder='Todo Info'\r\n        value={inputValue}\r\n        style={{ width: '40vw', marginRight: '10px' }}\r\n        onChange={changeInputValue}\r\n        onKeyDown={(e) => e.keyCode === 13 && handleClick()} />\r\n      <Button type='primary' onClick={handleClick}>提交</Button>\r\n      <List\r\n        style={{ width: '80vw', margin: '20px auto' }}\r\n        bordered\r\n        locale={{ emptyText: \"目前暂无内容，请在上放输入内容，回车或点击按钮添加内容。\" }}\r\n        dataSource={list}\r\n        renderItem={(item, index) => (<List.Item\r\n          actions={[<Button\r\n            type=\"danger\"\r\n            size=\"small\"\r\n            onClick={() => delItem(index)}>\r\n            删除\r\n              </Button>]}>\r\n          {item}\r\n        </List.Item>)}>\r\n      </List>\r\n    </div >\r\n  )\r\n}\r\n\r\n\r\nexport default TodoListUI;\r\n","/*\r\n * @Author: sky\r\n * @email: 13011316073@163.com\r\n * @Description: file content\r\n * @Date: 2019-02-19 17:43:08\r\n */\r\nimport React, { Fragment, PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// 引入 action 操作\r\nimport { actionCreators } from './store';\r\n\r\n// 引入 UI组件\r\nimport TodoListUI from './TodoListUI';\r\n\r\n\r\nclass TodoList extends PureComponent {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// 发送请求\r\n\t\tthis.props.getTodoLists();\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { inputValue, list, changeInputValue, handleClick, handleDelete } = this.props;\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<TodoListUI\r\n\t\t\t\t\tinputValue={inputValue}\r\n\t\t\t\t\tlist={list}\r\n\t\t\t\t\tchangeInputValue={changeInputValue}\r\n\t\t\t\t\thandleClick={handleClick}\r\n\t\t\t\t\thandleDelete={handleDelete}\r\n\t\t\t\t/>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n// 数据的映射关系\r\nconst mapStateToProps = (state) => ({\r\n\t// 这里的 todoList 和 inputValue,list 都是 immutable 类型的数据，所以都要使用 get() 去获取\r\n\tinputValue: state.get('todoList').get('inputValue'),\r\n\t// 与上边的等价\r\n\tlist: state.getIn(['todoList', 'list'])\r\n\t// list: state.get('todoList').get('list')\r\n});\r\n\r\n\r\n// 方法的映射关系\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\r\n\t\t// input 输入框改变触发\r\n\t\tchangeInputValue(e) {\r\n\t\t\t// const action = {\r\n\t\t\t// \ttype: 'change_input_value',\r\n\t\t\t// \tvalue: e.target.value\r\n\t\t\t// }\r\n\t\t\tconst action = actionCreators.getInputChangeAction(e.target.value);\r\n\t\t\tdispatch(action);\r\n\t\t},\r\n\r\n\t\t// 添加数据\r\n\t\thandleClick() {\r\n\t\t\tconst action = actionCreators.getAddItemAction();\r\n\t\t\tdispatch(action);\r\n\t\t},\r\n\r\n\t\t// 删除数据\r\n\t\thandleDelete(index) {\r\n\t\t\tconst action = actionCreators.getDeleteItemAction(index);\r\n\t\t\tdispatch(action);\r\n\t\t},\r\n\r\n\t\t// 获取所有的 item 值\r\n\t\tgetTodoLists() {\r\n\t\t\tconst action = actionCreators.getTodoList();\r\n\t\t\tdispatch(action);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n// 返回一个容器组件 是 connect 执行后返回的结果。\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","/*\r\n * @Author: sky\r\n * @email: 13011316073@163.com\r\n * @Description: home 页面\r\n * @Date: 2019-02-24 18:15:26\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// 引入组件\r\nimport TodoList from '../../Components/TodoList/TodoList';\r\n\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <h3 style={{ margin: '20px auto' }}>Hello TodoList!</h3>\r\n        <TodoList />\r\n        <p>\r\n          <Link to={'/detail/' + 1}>去详情页</Link>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Home;\r\n","/*\r\n * @Author: sky\r\n * @email: 13011316073@163.com\r\n * @Description: 使用异步组件\r\n * @Date: 2019-02-24 23:33:53\r\n */\r\nimport React from 'react';\r\nimport Loadable from 'react-loadable';\r\n\r\n\r\nconst LoadableComponent = Loadable({\r\n  loader: () => import('./'),\r\n  loading() {\r\n    return <div>正在加载!</div>\r\n  }\r\n});\r\n\r\n\r\nexport default () => <LoadableComponent />\r\n","/*\r\n * @Author: sky\r\n * @email: 13011316073@163.com\r\n * @Description: 主模块\r\n * @Date: 2019-02-19 17:35:22\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport store from './store';\r\n\r\n\r\n// 引入 路由相关 页面\r\nimport Home from './pages/home';\r\nimport Detail from './pages/detail/loadable';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className=\"App\">\r\n          <BrowserRouter>\r\n            <Fragment>\r\n              <Route\r\n                path='/'\r\n                exact\r\n                component={Home}>\r\n              </Route>\r\n              <Route\r\n                path='/detail/:id'\r\n                exact\r\n                component={Detail}>\r\n              </Route>\r\n            </Fragment>\r\n          </BrowserRouter>\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/*\r\n * @Author: sky\r\n * @email: 13011316073@163.com\r\n * @Description: 项目入口\r\n * @Date: 2019-02-19 17:35:22\r\n */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}